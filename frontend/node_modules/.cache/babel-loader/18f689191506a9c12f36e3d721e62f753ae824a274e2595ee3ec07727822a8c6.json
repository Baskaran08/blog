{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\personal_documents\\\\front_end_web_development\\\\React_JS\\\\blog\\\\frontend\\\\src\\\\pages\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostDetail() {\n  _s();\n  const [post, setPost] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/posts/${id}`).then(res => res.json()).then(data => {\n      setPost(data);\n    }).catch(err => console.error(\"Error Occured while fetching the data\" + err));\n  }, []);\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  const formattedDate = Intl.DateTimeFormat('en-US', {\n    month: \"long\",\n    day: \"numeric\",\n    // Use 'day' instead of 'date'\n    year: \"numeric\"\n  }).format(new Date(post.createdAt));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"col-lg-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"blog-post-title\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blog-post-meta\",\n            children: [formattedDate, \" by \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: post.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"mb-3 img-fluid\",\n            src: post.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog-post-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(PostDetail, \"EYKD55sgFzRFtTG9KqRH6S+WPNY=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PostDetail","_s","post","setPost","id","fetch","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","formattedDate","Intl","DateTimeFormat","month","day","year","format","Date","createdAt","className","title","href","author","src","image","alt","content","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/personal_documents/front_end_web_development/React_JS/blog/frontend/src/pages/PostDetail.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function PostDetail(){\r\n    const [post,setPost]=useState(null);\r\n    const {id}=useParams();\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://localhost:8000/api/posts/${id}`)\r\n        .then(res=>res.json())\r\n        .then(data=>{setPost(data)\r\n\r\n        })\r\n        .catch(err=>console.error(\"Error Occured while fetching the data\"+err))\r\n    },[])\r\n\r\n    if(!post){\r\n        return <h1>Loading..</h1>\r\n    }\r\n\r\n    const formattedDate=Intl.DateTimeFormat('en-US', {\r\n        month: \"long\",\r\n        day: \"numeric\", // Use 'day' instead of 'date'\r\n        year: \"numeric\"\r\n    }).format(new Date(post.createdAt));\r\n\r\n    return(\r\n        <>\r\n            <main className=\"container my-4\">\r\n                <div className=\"row\">\r\n                    <article className=\"col-lg-8\">\r\n                        <h2 className=\"blog-post-title\">{post.title}</h2>\r\n                        <p className=\"blog-post-meta\">{formattedDate} by <a href=\"#\">{post.author}</a></p>\r\n\r\n                        <img className=\"mb-3 img-fluid\" src={post.image} alt=\"\" />\r\n                        <div className=\"blog-post-content\">\r\n                            <p>{post.content}</p>\r\n                           \r\n                        </div>\r\n                    </article>\r\n\r\n\r\n                </div>\r\n            </main>        \r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}