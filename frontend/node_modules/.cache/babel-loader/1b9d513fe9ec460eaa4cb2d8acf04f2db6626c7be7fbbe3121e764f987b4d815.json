{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\personal_documents\\\\front_end_web_development\\\\React_JS\\\\blog\\\\frontend\\\\src\\\\pages\\\\CategoryPosts.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport PostCard from \"../components/PostCard\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostList() {\n  _s();\n  const [posts, setposts] = useState([]);\n  const [category, setcategories] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/posts/category/${id}`).then(res => res.json()).then(data => setposts(data));\n    fetch(`http://localhost:8000/api/categories/${id}`).then(res => res.json()).then(data => setcategories(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-lg-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"mb-4\",\n              children: \"Category 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 69\n            }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Posts Not Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(PostList, \"A+37rwq9Kq+TQ5sHuEKdzkOdvZg=\", false, function () {\n  return [useParams];\n});\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["useParams","PostCard","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","_s","posts","setposts","category","setcategories","id","fetch","then","res","json","data","children","class","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/personal_documents/front_end_web_development/React_JS/blog/frontend/src/pages/CategoryPosts.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport {useState,useEffect} from 'react'\r\n\r\nexport default function PostList(){\r\n    const [posts,setposts]=useState([])\r\n    const [category,setcategories]=useState([])\r\n    const {id}=useParams()\r\n    useEffect(()=>{\r\n        fetch(`http://localhost:8000/api/posts/category/${id}`)\r\n            .then(res=>res.json())\r\n            .then(data=>setposts(data))\r\n        \r\n        fetch(`http://localhost:8000/api/categories/${id}`)\r\n            .then(res=>res.json())\r\n            .then(data=>setcategories(data))\r\n    },[])\r\n    \r\n\r\n    return(\r\n        <>\r\n \r\n\r\n            <main>\r\n                    <div class=\"container mt-4\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-8\">\r\n                                <h1 class=\"mb-4\">Category 1</h1>\r\n                                {\r\n                                    posts.length>0?posts.map(post=> <PostCard post={post} />):<h1>Posts Not Available</h1>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </main>\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACU,QAAQ,EAACC,aAAa,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM;IAACY;EAAE,CAAC,GAACd,SAAS,CAAC,CAAC;EACtBG,SAAS,CAAC,MAAI;IACVY,KAAK,CAAC,4CAA4CD,EAAE,EAAE,CAAC,CAClDE,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAACG,IAAI,IAAER,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAE/BJ,KAAK,CAAC,wCAAwCD,EAAE,EAAE,CAAC,CAC9CE,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAACG,IAAI,IAAEN,aAAa,CAACM,IAAI,CAAC,CAAC;EACxC,CAAC,EAAC,EAAE,CAAC;EAGL,oBACId,OAAA,CAAAE,SAAA;IAAAa,QAAA,eAGIf,OAAA;MAAAe,QAAA,eACQf,OAAA;QAAKgB,KAAK,EAAC,gBAAgB;QAAAD,QAAA,eACvBf,OAAA;UAAKgB,KAAK,EAAC,KAAK;UAAAD,QAAA,eACZf,OAAA;YAAKgB,KAAK,EAAC,UAAU;YAAAD,QAAA,gBACjBf,OAAA;cAAIgB,KAAK,EAAC,MAAM;cAAAD,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAE5Bf,KAAK,CAACgB,MAAM,GAAC,CAAC,GAAChB,KAAK,CAACiB,GAAG,CAACC,IAAI,iBAAGvB,OAAA,CAACJ,QAAQ;cAAC2B,IAAI,EAAEA;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,CAAC,gBAACpB,OAAA;cAAAe,QAAA,EAAI;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEzF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC,gBAKT,CAAC;AAEX;AAAChB,EAAA,CArCuBD,QAAQ;EAAA,QAGjBR,SAAS;AAAA;AAAA6B,EAAA,GAHArB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}